%include 'in_out.asm' ; подключение внешнего файла

SECTION .data ; секция инициированных данных
msg1: DB 'Введите значение переменной х: ',0
msg2: DB 'Введите значение переменной a: ',0
rem: DB 'Результат: ',0

SECTION .bss ; секция не инициированных данных

x: RESB 80 ; Переменная, чьё значение будем вводить с клавиатуры, выделенный размер - 80 байт
a: RESB 80 ; Переменная, чьё значение будем вводить с клавиатуры, выделенный размер - 80 байт
SECTION .text ; Код программы
GLOBAL _start ; Начало программы
_start: ; Точка входа в программу

mov eax, msg1 ; запись адреса выводимиого сообщения в eax
call sprint ; вызов подпрограммы печати сообщения
mov ecx, x ; запись адреса переменной в ecx
mov edx, 80 ; запись длины вводимого значения в edx
call sread ; вызов подпрограммы ввода сообщения
mov eax,x; вызов подпрограммы преобразования
call atoi ; ASCII кода в число, eax=x
mov [x],eax
mov eax, msg2 ; запись адреса выводимиого сообщения в eax
call sprint ; вызов подпрограммы печати сообщения
mov ecx,a ; запись адреса переменной в ecx
mov edx, 85 ; запись длины вводимого значения в edx
call sread ; вызов подпрограммы ввода сообщения
mov eax,a ; вызов подпрограммы преобразования
call atoi ; ASCII кода в число, eax=x
mov [a],eax
;------------
cmp eax,[x] ; Сравниваем 'x' и 'a'
jb check_B ; если 'x<a', то переход на метку 'check_B',
jae check_A
;------------
check_A:
mov eax,[a]
shl eax,1
sub eax,[x]; eax =2a - x 
mov edi,eax ; запись результата вычисления в 'edi'
jmp _end
;------------
check_B: ;
mov edi,8 ; запись результата вычисления в 'edi'
jmp _end
; ---- Вывод результата на экран
_end:
mov eax,rem ; вызов подпрограммы печати
call sprint ; сообщения 'Результат: '
mov eax,edi ; вызов подпрограммы печати значения
call iprintLF ; из 'edi' в виде символов
call quit ; вызов подпрограммы завершения
