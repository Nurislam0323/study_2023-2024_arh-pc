     1                                  ;---------------   slen  -------------------
     2                                  ; Функция вычисления длины сообщения
     3                                  slen:                     
     4 00000000 53                          push    ebx             
     5 00000001 89C3                        mov     ebx, eax        
     6                                      
     7                                  nextchar:                   
     8 00000003 803800                      cmp     byte [eax], 0   
     9 00000006 7403                        jz      finished        
    10 00000008 40                          inc     eax             
    11 00000009 EBF8                        jmp     nextchar        
    12                                      
    13                                  finished:
    14 0000000B 29D8                        sub     eax, ebx
    15 0000000D 5B                          pop     ebx             
    16 0000000E C3                          ret                     
    17                                  
    18                                  
    19                                  ;---------------  sprint  -------------------
    20                                  ; Функция печати сообщения
    21                                  ; входные данные: mov eax,<message>
    22                                  sprint:
    23 0000000F 52                          push    edx
    24 00000010 51                          push    ecx
    25 00000011 53                          push    ebx
    26 00000012 50                          push    eax
    27 00000013 E8E8FFFFFF                  call    slen
    28                                      
    29 00000018 89C2                        mov     edx, eax
    30 0000001A 58                          pop     eax
    31                                      
    32 0000001B 89C1                        mov     ecx, eax
    33 0000001D BB01000000                  mov     ebx, 1
    34 00000022 B804000000                  mov     eax, 4
    35 00000027 CD80                        int     80h
    36                                  
    37 00000029 5B                          pop     ebx
    38 0000002A 59                          pop     ecx
    39 0000002B 5A                          pop     edx
    40 0000002C C3                          ret
    41                                  
    42                                  
    43                                  ;----------------  sprintLF  ----------------
    44                                  ; Функция печати сообщения с переводом строки
    45                                  ; входные данные: mov eax,<message>
    46                                  sprintLF:
    47 0000002D E8DDFFFFFF                  call    sprint
    48                                  
    49 00000032 50                          push    eax
    50 00000033 B80A000000                  mov     eax, 0AH
    51 00000038 50                          push    eax
    52 00000039 89E0                        mov     eax, esp
    53 0000003B E8CFFFFFFF                  call    sprint
    54 00000040 58                          pop     eax
    55 00000041 58                          pop     eax
    56 00000042 C3                          ret
    57                                  
    58                                  ;---------------  sread  ----------------------
    59                                  ; Функция считывания сообщения
    60                                  ; входные данные: mov eax,<buffer>, mov ebx,<N>
    61                                  sread:
    62 00000043 53                          push    ebx
    63 00000044 50                          push    eax
    64                                     
    65 00000045 BB00000000                  mov     ebx, 0
    66 0000004A B803000000                  mov     eax, 3
    67 0000004F CD80                        int     80h
    68                                  
    69 00000051 5B                          pop     ebx
    70 00000052 59                          pop     ecx
    71 00000053 C3                          ret
    72                                      
    73                                  ;------------- iprint  ---------------------
    74                                  ; Функция вывода на экран чисел в формате ASCII
    75                                  ; входные данные: mov eax,<int>
    76                                  iprint:
    77 00000054 50                          push    eax             
    78 00000055 51                          push    ecx             
    79 00000056 52                          push    edx             
    80 00000057 56                          push    esi             
    81 00000058 B900000000                  mov     ecx, 0          
    82                                      
    83                                  divideLoop:
    84 0000005D 41                          inc     ecx             
    85 0000005E BA00000000                  mov     edx, 0          
    86 00000063 BE0A000000                  mov     esi, 10  
    87 00000068 F7FE                        idiv    esi    
    88 0000006A 83C230                      add     edx, 48  
    89 0000006D 52                          push    edx   
    90 0000006E 83F800                      cmp     eax, 0   
    91 00000071 75EA                        jnz     divideLoop  
    92                                  
    93                                  printLoop:
    94 00000073 49                          dec     ecx       
    95 00000074 89E0                        mov     eax, esp  
    96 00000076 E894FFFFFF                  call    sprint   
    97 0000007B 58                          pop     eax    
    98 0000007C 83F900                      cmp     ecx, 0   
    99 0000007F 75F2                        jnz     printLoop  
   100                                  
   101 00000081 5E                          pop     esi   
   102 00000082 5A                          pop     edx    
   103 00000083 59                          pop     ecx   
   104 00000084 58                          pop     eax           
   105 00000085 C3                          ret
   106                                  
   107                                  
   108                                  ;--------------- iprintLF   --------------------
   109                                  ; Функция вывода на экран чисел в формате ASCII
   110                                  ; входные данные: mov eax,<int>
   111                                  iprintLF:
   112 00000086 E8C9FFFFFF                  call    iprint          
   113                                  
   114 0000008B 50                          push    eax             
   115 0000008C B80A000000                  mov     eax, 0Ah        
   116 00000091 50                          push    eax             
   117 00000092 89E0                        mov     eax, esp       
   118 00000094 E876FFFFFF                  call    sprint          
   119 00000099 58                          pop     eax             
   120 0000009A 58                          pop     eax             
   121 0000009B C3                          ret
   122                                  
   123                                  ;----------------- atoi  ---------------------
   124                                  ; Функция преобразования ascii-код символа в целое число
   125                                  ; входные данные: mov eax,<int>
   126                                  atoi:
   127 0000009C 53                          push    ebx             
   128 0000009D 51                          push    ecx             
   129 0000009E 52                          push    edx             
   130 0000009F 56                          push    esi             
   131 000000A0 89C6                        mov     esi, eax        
   132 000000A2 B800000000                  mov     eax, 0          
   133 000000A7 B900000000                  mov     ecx, 0          
   134                                   
   135                                  .multiplyLoop:
   136 000000AC 31DB                        xor     ebx, ebx        
   137 000000AE 8A1C0E                      mov     bl, [esi+ecx]
   138 000000B1 80FB30                      cmp     bl, 48 
   139 000000B4 7C14                        jl      .finished 
   140 000000B6 80FB39                      cmp     bl, 57  
   141 000000B9 7F0F                        jg      .finished 
   142                                   
   143 000000BB 80EB30                      sub     bl, 48 
   144 000000BE 01D8                        add     eax, ebx
   145 000000C0 BB0A000000                  mov     ebx, 10  
   146 000000C5 F7E3                        mul     ebx  
   147 000000C7 41                          inc     ecx   
   148 000000C8 EBE2                        jmp     .multiplyLoop  
   149                                   
   150                                  .finished:
   151 000000CA 83F900                      cmp     ecx, 0  
   152 000000CD 7407                        je      .restore   
   153 000000CF BB0A000000                  mov     ebx, 10  
   154 000000D4 F7F3                        div     ebx     
   155                                   
   156                                  .restore:
   157 000000D6 5E                          pop     esi   
   158 000000D7 5A                          pop     edx    
   159 000000D8 59                          pop     ecx  
   160 000000D9 5B                          pop     ebx 
   161 000000DA C3                          ret
   162                                  
   163                                  
   164                                  ;------------- quit   ---------------------
   165                                  ; Функция завершения программы
   166                                  quit:
   167 000000DB BB00000000                  mov     ebx, 0      
   168 000000E0 B801000000                  mov     eax, 1      
   169 000000E5 CD80                        int     80h
   170 000000E7 C3                          ret
